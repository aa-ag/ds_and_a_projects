--------------------------------------------------------------------
*** Time Complexity Analysis ***
--------------------------------------------------------------------

You will write up a clean and efficient answer in Python, 
as well as a text explanation of the efficiency of your code 
and your design choices.'

--------------------------------------------------------------------

- problem_1.py: O(log(n)). The ** operation grows in complexity after
n doubles, while floor division stays constant.''
- problem_2.py: O(n). Using `in` operator is O(n). Python's `index()`
built-in function runs on O(n). 
- problem_3.py: ...
- problem_4.py: ...

--------------------------------------------------------------------

'https://pypi.org/project/big-O/
''https://stackoverflow.com/questions/48839772/why-is-time-complexity-o1-for-powx-y-while-it-is-on-for-xy
''https://www.quora.com/What-is-the-time-complexity-of-raising-a-number-N-to-the-power-k?share=1
''https://stackoverflow.com/questions/34335430/what-is-time-complexity-of-divison